[
  {
    "role": "user",
    "content": "=== Game Rules ===\nGame rules in natural language:\n### Game Analysis\n\n#### Genre:\nBased on the description provided, this game appears to be a **maze or puzzle-based adventure game** with elements of stealth and evasion. The presence of various sprites such as walls, tunnels, and pursuing enemies suggests a strategy-based gameplay environment, likely involving avoiding threats and manipulating the environment to reach objectives.\n\n#### Mechanics:\n- **Movement and Interaction**: Players control a 'human' sprite that can move through a maze-like layout. There are specific interactions that apply when the human sprite encounters other sprites (like switching doors, tunnels, or enemies).\n- **Transformations and Effects**: The game allows transformation between different states (crouching, standing) and types (pursuer, wanderer). These transformations can be triggered by specific interactions with the environment (e.g., tunnels and walls).\n- **Enemy Behavior**: There are various types of enemies, each with specific movement patterns (e.g., 'pursuers' that chase the player and 'wanderers' that may have random movement).\n\n#### Objective:\nThe primary goal of the game appears to be to reach the **exit** while avoiding enemies and navigating through the maze. Players must interact with the environment to access doors and transform their state to avoid being caught.\n\n#### Win/Loss Conditions:\n- **Win Condition**: The player wins if they manage to reach the exit sprite, which changes the sprite counter for the exit type to signify victory.\n- **Loss Condition**: The player loses if the sprite counter for the 'human' type reaches zero, meaning the player has been caught by an enemy or failed to navigate through the maze safely.\n\n### Suggested Strategy:\n\n1. **Map Awareness**: Familiarize yourself with the layout of the level. Knowing where walls, enemies, and exits are located is crucial for successful navigation. \n\n2. **Stealth Movement**: Use the crouching mechanic wisely to minimize detection by pursuing enemies. Crouching may enable the player to pass certain obstacles and avoid triggering alert states in enemies.\n\n3. **Environmental Interaction**: Pay attention to switches and tunnels. Switching doors can open new paths, and tunnels can provide safe passage or transformation into a 'wanderer' sprite, possibly allowing you to navigate the maze more effectively.\n\n4. **Timing and Patience**: Many enemy sprites have cooldowns and specific paths. Timing your movements to avoid these patrols can save from losing the game. Observe enemy patterns before making your move.\n\n5. **Object Management**: You need to manage how and when to interact with objects (like doors and walls) to create openings or prevent enemies from surrounding you. This might involve temporarily transforming into other sprites when needed.\n\n6. **Exit Focus**: Your ultimate goal should be to reach the exit. As you explore, prioritize paths that lead you closer to it, while also keeping in mind enemy positions to avoid confrontation.\n\n### Conclusion:\nThis game offers a blend of strategic movement, environmental interaction, and puzzle-solving within a maze. By utilizing stealth and understanding the mechanics behind enemy behavior and environment, players can enhance their chances of reaching the exit successfully while avoiding game loss conditions.\n\nYou are an intelligent player playing a video game, and you have a friend provide you strategy. Interpret the state, rule, strategy and act accordingly. Notice that your avatar position is one of the most important information, if the position doesn't change from the last state, you need to analyze the state and make a different action from the last time.\n\n=== Available Actions ===\n0: ACTION_NIL\n1: ACTION_LEFT\n2: ACTION_RIGHT\n3: ACTION_DOWN\n4: ACTION_UP\n\n=== Important Mechanics Notice ===\n In some games, directional actions (LEFT, RIGHT, UP, DOWN) may first cause the avatar to rotate toward the intended direction without immediately moving. If the avatar's position does not change after a directional action, it may indicate a rotation has occurred. To proceed, you must apply the directional action again after rotation. Always verify whether the avatar actually moved after each action. Please understand the rule and the interaction set first, then locate the item, finally choose a meaningful action towards the win and respond in the format: ``` Action:<action number> ```. Include one sentence of feedback on the action and your expectation to see if it aligns with the strategy. Notice, Action 0 will not reasult in any change in this game environment, and you may need to understand the level layout first to play the game. \n\n=== Sprite Mapping ===\navatar -> 'a'\nalientunnel -> '@'\ndoorClosed -> '#'\nexit -> '$'\npursuer -> '%'\nstanding -> '&'\nswitch -> '*'\ntunnel -> 'd'\nwall -> 'e'\n\n=== Current State ===\n=== Map in Natural language ===\nEach line shows entity at (row, col).\nIn rotated version, row emphasizes vertical (up-down).\nrow=0, col=0 -> e\nrow=0, col=1 -> e\nrow=0, col=2 -> e\nrow=0, col=3 -> e\nrow=0, col=4 -> e\nrow=0, col=5 -> e\nrow=0, col=6 -> e\nrow=0, col=7 -> e\nrow=0, col=8 -> e\nrow=0, col=9 -> e\nrow=0, col=10 -> e\nrow=0, col=11 -> e\nrow=0, col=12 -> e\nrow=0, col=13 -> e\nrow=0, col=14 -> e\nrow=0, col=15 -> e\nrow=0, col=16 -> e\nrow=0, col=17 -> e\nrow=0, col=18 -> e\nrow=0, col=19 -> e\nrow=0, col=20 -> e\nrow=0, col=21 -> e\nrow=0, col=22 -> e\nrow=0, col=23 -> e\nrow=0, col=24 -> e\nrow=0, col=25 -> e\nrow=0, col=26 -> e\nrow=0, col=27 -> e\nrow=1, col=0 -> e\nrow=1, col=1 -> .\nrow=1, col=2 -> .\nrow=1, col=3 -> .\nrow=1, col=4 -> .\nrow=1, col=5 -> #\nrow=1, col=6 -> .\nrow=1, col=7 -> .\nrow=1, col=8 -> .\nrow=1, col=9 -> .\nrow=1, col=10 -> .\nrow=1, col=11 -> .\nrow=1, col=12 -> e\nrow=1, col=13 -> .\nrow=1, col=14 -> .\nrow=1, col=15 -> .\nrow=1, col=16 -> e\nrow=1, col=17 -> .\nrow=1, col=18 -> .\nrow=1, col=19 -> .\nrow=1, col=20 -> .\nrow=1, col=21 -> .\nrow=1, col=22 -> e\nrow=1, col=23 -> .\nrow=1, col=24 -> e\nrow=1, col=25 -> .\nrow=1, col=26 -> .\nrow=1, col=27 -> e\nrow=2, col=0 -> e\nrow=2, col=1 -> .\nrow=2, col=2 -> .\nrow=2, col=3 -> .\nrow=2, col=4 -> .\nrow=2, col=5 -> e\nrow=2, col=6 -> e\nrow=2, col=7 -> e\nrow=2, col=8 -> e\nrow=2, col=9 -> e\nrow=2, col=10 -> e\nrow=2, col=11 -> e\nrow=2, col=12 -> e\nrow=2, col=13 -> .\nrow=2, col=14 -> .\nrow=2, col=15 -> .\nrow=2, col=16 -> e\nrow=2, col=17 -> .\nrow=2, col=18 -> .\nrow=2, col=19 -> .\nrow=2, col=20 -> .\nrow=2, col=21 -> .\nrow=2, col=22 -> e\nrow=2, col=23 -> #\nrow=2, col=24 -> e\nrow=2, col=25 -> .\nrow=2, col=26 -> .\nrow=2, col=27 -> e\nrow=3, col=0 -> e\nrow=3, col=1 -> .\nrow=3, col=2 -> .\nrow=3, col=3 -> .\nrow=3, col=4 -> .\nrow=3, col=5 -> .\nrow=3, col=6 -> .\nrow=3, col=7 -> .\nrow=3, col=8 -> .\nrow=3, col=9 -> .\nrow=3, col=10 -> e\nrow=3, col=11 -> e\nrow=3, col=12 -> e\nrow=3, col=13 -> .\nrow=3, col=14 -> .\nrow=3, col=15 -> .\nrow=3, col=16 -> e\nrow=3, col=17 -> e\nrow=3, col=18 -> e\nrow=3, col=19 -> .\nrow=3, col=20 -> .\nrow=3, col=21 -> .\nrow=3, col=22 -> .\nrow=3, col=23 -> .\nrow=3, col=24 -> .\nrow=3, col=25 -> .\nrow=3, col=26 -> .\nrow=3, col=27 -> e\nrow=4, col=0 -> e\nrow=4, col=1 -> .\nrow=4, col=2 -> e\nrow=4, col=3 -> d\nrow=4, col=4 -> e\nrow=4, col=5 -> .\nrow=4, col=6 -> .\nrow=4, col=7 -> .\nrow=4, col=8 -> .\nrow=4, col=9 -> .\nrow=4, col=10 -> d\nrow=4, col=11 -> d\nrow=4, col=12 -> d\nrow=4, col=13 -> .\nrow=4, col=14 -> .\nrow=4, col=15 -> .\nrow=4, col=16 -> d\nrow=4, col=17 -> d\nrow=4, col=18 -> d\nrow=4, col=19 -> .\nrow=4, col=20 -> .\nrow=4, col=21 -> .\nrow=4, col=22 -> e\nrow=4, col=23 -> d\nrow=4, col=24 -> e\nrow=4, col=25 -> .\nrow=4, col=26 -> .\nrow=4, col=27 -> e\nrow=5, col=0 -> e\nrow=5, col=1 -> .\nrow=5, col=2 -> e\nrow=5, col=3 -> d\nrow=5, col=4 -> e\nrow=5, col=5 -> .\nrow=5, col=6 -> .\nrow=5, col=7 -> .\nrow=5, col=8 -> .\nrow=5, col=9 -> .\nrow=5, col=10 -> e\nrow=5, col=11 -> e\nrow=5, col=12 -> e\nrow=5, col=13 -> .\nrow=5, col=14 -> .\nrow=5, col=15 -> .\nrow=5, col=16 -> e\nrow=5, col=17 -> e\nrow=5, col=18 -> e\nrow=5, col=19 -> .\nrow=5, col=20 -> .\nrow=5, col=21 -> e\nrow=5, col=22 -> e\nrow=5, col=23 -> d\nrow=5, col=24 -> e\nrow=5, col=25 -> e\nrow=5, col=26 -> .\nrow=5, col=27 -> e\nrow=6, col=0 -> e\nrow=6, col=1 -> .\nrow=6, col=2 -> e\nrow=6, col=3 -> d\nrow=6, col=4 -> e\nrow=6, col=5 -> e\nrow=6, col=6 -> e\nrow=6, col=7 -> e\nrow=6, col=8 -> @\nrow=6, col=9 -> e\nrow=6, col=10 -> .\nrow=6, col=11 -> .\nrow=6, col=12 -> e\nrow=6, col=13 -> .\nrow=6, col=14 -> &\nrow=6, col=15 -> .\nrow=6, col=16 -> e\nrow=6, col=17 -> .\nrow=6, col=18 -> .\nrow=6, col=19 -> .\nrow=6, col=20 -> .\nrow=6, col=21 -> d\nrow=6, col=22 -> d\nrow=6, col=23 -> d\nrow=6, col=24 -> d\nrow=6, col=25 -> d\nrow=6, col=26 -> .\nrow=6, col=27 -> e\nrow=7, col=0 -> e\nrow=7, col=1 -> .\nrow=7, col=2 -> e\nrow=7, col=3 -> d\nrow=7, col=4 -> e\nrow=7, col=5 -> .\nrow=7, col=6 -> .\nrow=7, col=7 -> e\nrow=7, col=8 -> @\nrow=7, col=9 -> e\nrow=7, col=10 -> .\nrow=7, col=11 -> .\nrow=7, col=12 -> e\nrow=7, col=13 -> .\nrow=7, col=14 -> %\nrow=7, col=15 -> .\nrow=7, col=16 -> e\nrow=7, col=17 -> .\nrow=7, col=18 -> .\nrow=7, col=19 -> .\nrow=7, col=20 -> .\nrow=7, col=21 -> e\nrow=7, col=22 -> e\nrow=7, col=23 -> e\nrow=7, col=24 -> e\nrow=7, col=25 -> e\nrow=7, col=26 -> .\nrow=7, col=27 -> e\nrow=8, col=0 -> e\nrow=8, col=1 -> .\nrow=8, col=2 -> e\nrow=8, col=3 -> .\nrow=8, col=4 -> e\nrow=8, col=5 -> .\nrow=8, col=6 -> .\nrow=8, col=7 -> e\nrow=8, col=8 -> @\nrow=8, col=9 -> e\nrow=8, col=10 -> .\nrow=8, col=11 -> .\nrow=8, col=12 -> e\nrow=8, col=13 -> .\nrow=8, col=14 -> .\nrow=8, col=15 -> .\nrow=8, col=16 -> e\nrow=8, col=17 -> .\nrow=8, col=18 -> .\nrow=8, col=19 -> .\nrow=8, col=20 -> .\nrow=8, col=21 -> .\nrow=8, col=22 -> .\nrow=8, col=23 -> .\nrow=8, col=24 -> .\nrow=8, col=25 -> .\nrow=8, col=26 -> .\nrow=8, col=27 -> e\nrow=9, col=0 -> e\nrow=9, col=1 -> .\nrow=9, col=2 -> e\nrow=9, col=3 -> *\nrow=9, col=4 -> e\nrow=9, col=5 -> .\nrow=9, col=6 -> .\nrow=9, col=7 -> e\nrow=9, col=8 -> @\nrow=9, col=9 -> e\nrow=9, col=10 -> .\nrow=9, col=11 -> .\nrow=9, col=12 -> e\nrow=9, col=13 -> .\nrow=9, col=14 -> .\nrow=9, col=15 -> .\nrow=9, col=16 -> e\nrow=9, col=17 -> .\nrow=9, col=18 -> .\nrow=9, col=19 -> .\nrow=9, col=20 -> .\nrow=9, col=21 -> e\nrow=9, col=22 -> e\nrow=9, col=23 -> e\nrow=9, col=24 -> #\nrow=9, col=25 -> e\nrow=9, col=26 -> .\nrow=9, col=27 -> e\nrow=10, col=0 -> e\nrow=10, col=1 -> .\nrow=10, col=2 -> e\nrow=10, col=3 -> .\nrow=10, col=4 -> e\nrow=10, col=5 -> .\nrow=10, col=6 -> .\nrow=10, col=7 -> .\nrow=10, col=8 -> .\nrow=10, col=9 -> .\nrow=10, col=10 -> .\nrow=10, col=11 -> .\nrow=10, col=12 -> @\nrow=10, col=13 -> .\nrow=10, col=14 -> .\nrow=10, col=15 -> .\nrow=10, col=16 -> @\nrow=10, col=17 -> .\nrow=10, col=18 -> .\nrow=10, col=19 -> .\nrow=10, col=20 -> .\nrow=10, col=21 -> e\nrow=10, col=22 -> .\nrow=10, col=23 -> .\nrow=10, col=24 -> .\nrow=10, col=25 -> e\nrow=10, col=26 -> .\nrow=10, col=27 -> e\nrow=11, col=0 -> e\nrow=11, col=1 -> .\nrow=11, col=2 -> @\nrow=11, col=3 -> @\nrow=11, col=4 -> @\nrow=11, col=5 -> .\nrow=11, col=6 -> .\nrow=11, col=7 -> .\nrow=11, col=8 -> .\nrow=11, col=9 -> .\nrow=11, col=10 -> e\nrow=11, col=11 -> e\nrow=11, col=12 -> e\nrow=11, col=13 -> e\nrow=11, col=14 -> e\nrow=11, col=15 -> e\nrow=11, col=16 -> e\nrow=11, col=17 -> e\nrow=11, col=18 -> e\nrow=11, col=19 -> .\nrow=11, col=20 -> .\nrow=11, col=21 -> e\nrow=11, col=22 -> .\nrow=11, col=23 -> e\nrow=11, col=24 -> .\nrow=11, col=25 -> e\nrow=11, col=26 -> .\nrow=11, col=27 -> e\nrow=12, col=0 -> e\nrow=12, col=1 -> .\nrow=12, col=2 -> e\nrow=12, col=3 -> e\nrow=12, col=4 -> e\nrow=12, col=5 -> .\nrow=12, col=6 -> .\nrow=12, col=7 -> .\nrow=12, col=8 -> .\nrow=12, col=9 -> .\nrow=12, col=10 -> @\nrow=12, col=11 -> @\nrow=12, col=12 -> @\nrow=12, col=13 -> @\nrow=12, col=14 -> @\nrow=12, col=15 -> @\nrow=12, col=16 -> @\nrow=12, col=17 -> @\nrow=12, col=18 -> @\nrow=12, col=19 -> .\nrow=12, col=20 -> .\nrow=12, col=21 -> @\nrow=12, col=22 -> .\nrow=12, col=23 -> e\nrow=12, col=24 -> $\nrow=12, col=25 -> e\nrow=12, col=26 -> .\nrow=12, col=27 -> e\nrow=13, col=0 -> e\nrow=13, col=1 -> e\nrow=13, col=2 -> e\nrow=13, col=3 -> e\nrow=13, col=4 -> e\nrow=13, col=5 -> e\nrow=13, col=6 -> e\nrow=13, col=7 -> e\nrow=13, col=8 -> e\nrow=13, col=9 -> e\nrow=13, col=10 -> e\nrow=13, col=11 -> e\nrow=13, col=12 -> e\nrow=13, col=13 -> e\nrow=13, col=14 -> e\nrow=13, col=15 -> e\nrow=13, col=16 -> e\nrow=13, col=17 -> e\nrow=13, col=18 -> e\nrow=13, col=19 -> e\nrow=13, col=20 -> e\nrow=13, col=21 -> e\nrow=13, col=22 -> e\nrow=13, col=23 -> e\nrow=13, col=24 -> e\nrow=13, col=25 -> e\nrow=13, col=26 -> e\nrow=13, col=27 -> e",
    "model": "portkey"
  },
  {
    "role": "assistant",
    "content": "Based on the provided game state and rules, it appears that my sprite is currently located at (6, 14) represented by the '&' symbol. This indicates that I am in a standing state and adjacent to various elements, including open spaces, tunnels, and a pursuing enemy below at (7, 14).\n\nTo navigate effectively:\n\n1. **Aim for safety**: I should avoid moving directly towards the pursuing enemy currently located to the south (below me).\n2. **Consider nearby elements**: There's a tunnel (d) below me at (7, 3) and I can also transition to a human or a wandering state depending on interactions with the environment.\n3. **Evaluate options**: Staying in the presence of a pursuing enemy poses a risk, so I will attempt to move into a direction that either increases distance from the enemy or reaches a safer area.\n\nFollowing these considerations, I will choose to move **down** towards the opening by directly moving to (6, 14) which aligns with my strategy to analyze state and not remain positioned where I could be caught. \n\n``` Action:3 ```\nThis action should keep me alert to surrounding obstacles while prioritizing both positional safety and potential escape routes from the pursuer.",
    "model": "portkey"
  }
]