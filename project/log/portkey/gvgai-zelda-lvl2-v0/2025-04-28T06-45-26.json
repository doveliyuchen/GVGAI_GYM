[
  {
    "role": "user",
    "content": "=== Game Rules ===\nThis is vgdl rule file:\nBasicGame\n  SpriteSet\n    floor > Immovable randomtiling=0.9 img=oryx/floor3 hidden=True\n    goal  > Door color=GREEN img=oryx/doorclosed1\n    key   > Immovable color=ORANGE img=oryx/key2\n    sword > OrientedFlicker limit=5 singleton=True img=oryx/slash1\n    movable >\n      avatar  > ShootAvatar   stype=sword frameRate=8\n        nokey   > img=oryx/swordman1\n        withkey > color=ORANGE img=oryx/swordmankey1\n      enemy >  \n        monsterQuick > RandomNPC cooldown=2 cons=6 img=oryx/bat1\n        monsterNormal > RandomNPC cooldown=4 cons=8 img=oryx/spider2\n        monsterSlow > RandomNPC cooldown=8 cons=12 img=oryx/scorpion1\n      wall > Immovable autotiling=true img=oryx/wall3\n      \t\n\n  LevelMapping\n    g > floor goal\n    + > floor key        \n    A > floor nokey\n    1 > floor monsterQuick\n    2 > floor monsterNormal\n    3 > floor monsterSlow\n    w > wall\n    . > floor\n    \n\n  InteractionSet\n    movable wall  > stepBack\n    nokey goal    > stepBack\n    goal withkey  > killSprite scoreChange=1\n    enemy sword > killSprite scoreChange=2\n    enemy enemy > stepBack\n    avatar enemy > killSprite scoreChange=-1\n    nokey key     > transformTo stype=withkey scoreChange=1 killSecond=True\n\n  TerminationSet\n    SpriteCounter stype=goal   win=True\n    SpriteCounter stype=avatar win=False\nThis is vgdl rule in natural language:\nBelow is an analysis that covers the genre, mechanics, objectives, win/loss conditions, and a sample overall strategy:\n\n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n1. Game Genre \n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n\u2022 It\u2019s an action\u2013puzzle maze/dungeon game.  \n\u2022 The level layout, tile\u2010based sprites, and mix of real\u2013time movement with puzzle elements (collecting keys, opening doors, and using a temporary weapon) place it in the \u201caction puzzle\u201d or \u201cmaze chase\u201d genre.\n\n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n2. Game Mechanics \n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n\u2022 Sprites & Environment:  \n\u2003 \u2013 Walls, floors, and auto\u2010tiling for walls build a maze-like environment.  \n\u2003 \u2013 The level is bordered by \u201cwall\u201d sprites with interior obstacles.\n\n\u2022 Player and Transformations:  \n\u2003 \u2013 The player controls an \u201cavatar\u201d that has a shooting mechanic (\u201cShootAvatar\u201d) which fires a temporary \u201csword\u201d (an OrientedFlicker with a short lifespan).  \n\u2003 \u2013 Initially, the player\u2019s character is represented by the \u201cnokey\u201d sprite. When this sprite interacts with a \u201ckey,\u201d it transforms into \u201cwithkey\u201d (and increases score by 1). This transformation indicates that the player\u2019s avatar now \u201chas the key.\u201d\n\n\u2022 Key Items & Interactions:  \n\u2003 \u2013 The \u201ckey\u201d is a collectible that changes the avatar\u2019s state (nokey \u2192 withkey).  \n\u2003 \u2013 The \u201cgoal\u201d is represented by a door. If the door comes into contact with the \u201cwithkey\u201d avatar, the door triggers an interaction (it is \u201ckilled\u201d) and adds to the score.\n\n\u2022 Enemies & Combat:  \n\u2003 \u2013 Multiple enemy types are present, including \u201cenemy\u201d (generic) and NPCs like \u201cmonsterQuick,\u201d \u201cmonsterNormal,\u201d and \u201cmonsterSlow,\u201d which use a RandomNPC AI with different cooldowns and \u201ccons\u201d values.  \n\u2003 \u2013 The player\u2019s sword is used to eliminate enemies (interaction: enemy + sword > killSprite, score +2).  \n\u2003 \u2013 Direct contact between the avatar and an enemy also results in a kill event, but with a negative score change (score \u20131), discouraging such contact.\n\n\u2022 Obstacle Reactions:  \n\u2003 \u2013 The \u201cmovable\u201d sprite interacting with \u201cwall\u201d triggers a \u201cstepBack\u201d reaction, ensuring that the player or other objects cannot pass through walls.  \n\u2003 \u2013 Similarly, a \u201cnokey\u201d avatar hitting the goal door (without the key) also results in a step back.\n\n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n3. Objectives and Win/Loss Conditions\n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n\u2022 Primary Objective:  \n\u2003 \u2013 The player must collect the key (by interacting with the \u201ckey\u201d and transforming from nokey to withkey) and then reach the \u201cgoal\u201d door.\n\n\u2022 Win Condition:  \n\u2003 \u2013 When the \u201cgoal\u201d sprite (door) interacts with a \u201cwithkey\u201d avatar, it is removed (\u201ckillSprite\u201d) and the action increases the score.  \n\u2003 \u2013 The termination condition \u201cSpriteCounter stype=goal win=True\u201d indicates victory is achieved when the goal is reached (or removed) under the proper conditions.\n\n\u2022 Loss Condition:  \n\u2003 \u2013 The termination condition \u201cSpriteCounter stype=avatar win=False\u201d means that if the avatar is killed (i.e. its sprite count drops to zero, for example by enemy contact or other hazards), the game is lost.\n\n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n4. A Possible Overall Strategy\n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n\u2022 First, Survey the Layout:  \n\u2003 \u2013 Familiarize yourself with the level\u2019s maze-like corridors, noting the locations of walls, the key, enemies, and the goal door.  \n\u2003 \u2013 Identify potential paths that allow you to safely reach the key and later the goal.\n\n\u2022 Key Collection:  \n\u2003 \u2013 Prioritize securing the key. Approach it cautiously, as picking it up changes your avatar into the \u201cwithkey\u201d state, enabling door access while also adding points.  \n\u2003 \u2013 Plan your route to avoid unnecessary confrontation with enemies on the way.\n\n\u2022 Enemy Management:  \n\u2003 \u2013 Use the sword strategically. Fire the sword (the \u201cOrientedFlicker\u201d with a brief, limited window) to dispatch enemies that block your path or get too close.  \n\u2003 \u2013 Avoid direct contact: Note that colliding with an enemy as an avatar (without using your sword) leads to a penalty (score \u20131) and risk of death.  \n\u2003 \u2013 Learn enemy movement patterns (some enemies move quickly, others slowly) to time your moves and sword attacks effectively.\n\n\u2022 Door (Goal) Approach:  \n\u2003 \u2013 Once you have transformed into the \u201cwithkey\u201d sprite by collecting the key, navigate to the goal door.  \n\u2003 \u2013 Given that the door only interacts correctly with the \u201cwithkey\u201d avatar (and not the \u201cnokey\u201d version), confirm that you\u2019ve picked up the key before trying to enter.  \n\u2003 \u2013 The correct interaction with the door at this state wins the game by both terminating the level positively and increasing your score.\n\n\u2022 Score Management and Safety:  \n\u2003 \u2013 Eliminate enemies with the sword for additional score bonuses.  \n\u2003 \u2013 Stay mindful of your surroundings so that you do not accidentally run into enemies, which would cost points and risk your survival.\n\n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\nConclusion\n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\nThis game blends maze exploration with action combat. The core flow is to navigate carefully, collect the key to change your state and enable door access, use your temporary sword attack to neutralize threats, and finally reach the door safely to win the level. By planning your path through the maze, managing enemy encounters smartly, and timing your combat and key collection perfectly, you can maximize your score and ensure victory.\n\nThis analysis should help frame your approach to playing or further analyzing this game.\n\nYou are an intelligent player playing a video game, and you have a friend provide you strategy. Interpret the state, rule, strategy and act accordingly. Notice that your avatar position is one of the most important information, if the position doesn't change from the last state, you need to analyze the state and make a different action from the last time.\n\n=== Available Actions ===\n0: ACTION_NIL\n1: ACTION_USE\n2: ACTION_LEFT\n3: ACTION_RIGHT\n4: ACTION_DOWN\n5: ACTION_UP\n\nPlease understand the rule and the interaction set first, then locate the item, finally choose a meaningful action towards the win and respond in the format: ``` Action:<action number> ```. Include one sentence of feedback on the action and your expectation to see if it aligns with the strategy. Notice, Action 0 will not reasult in any change in this game environment, and you may need to understand the level layout first to play the game. \n\n=== Sprite Mapping ===\navatar -> 'a'\nfloor goal -> 'g'\nfloor key -> '+'\nfloor nokey -> 'A'\nfloor monsterQuick -> '1'\nfloor monsterNormal -> '2'\nfloor monsterSlow -> '3'\nwall -> 'w'\nfloor -> '.'\ngoal -> '@'\nkey -> '#'\nmonsterNormal -> '$'\nmonsterQuick -> '%'\nmonsterSlow -> '&'\nnokey -> '*'\n\n=== Current State ===\n=== Original State ===\nwwwwwwwwwwwww\nw..&.ww...*.w\nw....w......w\nw.w.....wwwww\nw#w........%w\nw.w..wwwwwwww\nw.......w...w\nw...$w....w@w\nwwwwwwwwwwwww\n\n=== Rotated State (Y-axis emphasis) ===\nwwwwwwwww\nw...#...w\nw..www..w\nw......&w\nw$......w\nww.w..www\nw..w...ww\nw..w....w\nw.ww.w..w\nw..w.w..w\nww.w.w.*w\nw@.w%w..w\nwwwwwwwww\nNote: In the original state, each row corresponds to horizontal (left-right) layout in the game.\nIn the rotated version, each row corresponds to vertical (up-down) layout.=== Map in Natural language ===\nEach line shows entity at (row, col).\nIn rotated version, row emphasizes vertical (up-down).\nrow=0, col=0 -> =\nrow=0, col=1 -> =\nrow=0, col=2 -> =\nrow=0, col=3 ->  \nrow=0, col=4 -> O\nrow=0, col=5 -> r\nrow=0, col=6 -> i\nrow=0, col=7 -> g\nrow=0, col=8 -> i\nrow=0, col=9 -> n\nrow=0, col=10 -> a\nrow=0, col=11 -> l\nrow=0, col=12 ->  \nrow=0, col=13 -> S\nrow=0, col=14 -> t\nrow=0, col=15 -> a\nrow=0, col=16 -> t\nrow=0, col=17 -> e\nrow=0, col=18 ->  \nrow=0, col=19 -> =\nrow=0, col=20 -> =\nrow=0, col=21 -> =\nrow=1, col=0 -> w\nrow=1, col=1 -> w\nrow=1, col=2 -> w\nrow=1, col=3 -> w\nrow=1, col=4 -> w\nrow=1, col=5 -> w\nrow=1, col=6 -> w\nrow=1, col=7 -> w\nrow=1, col=8 -> w\nrow=1, col=9 -> w\nrow=1, col=10 -> w\nrow=1, col=11 -> w\nrow=1, col=12 -> w\nrow=2, col=0 -> w\nrow=2, col=1 -> .\nrow=2, col=2 -> .\nrow=2, col=3 -> &\nrow=2, col=4 -> .\nrow=2, col=5 -> w\nrow=2, col=6 -> w\nrow=2, col=7 -> .\nrow=2, col=8 -> .\nrow=2, col=9 -> .\nrow=2, col=10 -> *\nrow=2, col=11 -> .\nrow=2, col=12 -> w\nrow=3, col=0 -> w\nrow=3, col=1 -> .\nrow=3, col=2 -> .\nrow=3, col=3 -> .\nrow=3, col=4 -> .\nrow=3, col=5 -> w\nrow=3, col=6 -> .\nrow=3, col=7 -> .\nrow=3, col=8 -> .\nrow=3, col=9 -> .\nrow=3, col=10 -> .\nrow=3, col=11 -> .\nrow=3, col=12 -> w\nrow=4, col=0 -> w\nrow=4, col=1 -> .\nrow=4, col=2 -> w\nrow=4, col=3 -> .\nrow=4, col=4 -> .\nrow=4, col=5 -> .\nrow=4, col=6 -> .\nrow=4, col=7 -> .\nrow=4, col=8 -> w\nrow=4, col=9 -> w\nrow=4, col=10 -> w\nrow=4, col=11 -> w\nrow=4, col=12 -> w\nrow=5, col=0 -> w\nrow=5, col=1 -> #\nrow=5, col=2 -> w\nrow=5, col=3 -> .\nrow=5, col=4 -> .\nrow=5, col=5 -> .\nrow=5, col=6 -> .\nrow=5, col=7 -> .\nrow=5, col=8 -> .\nrow=5, col=9 -> .\nrow=5, col=10 -> .\nrow=5, col=11 -> %\nrow=5, col=12 -> w\nrow=6, col=0 -> w\nrow=6, col=1 -> .\nrow=6, col=2 -> w\nrow=6, col=3 -> .\nrow=6, col=4 -> .\nrow=6, col=5 -> w\nrow=6, col=6 -> w\nrow=6, col=7 -> w\nrow=6, col=8 -> w\nrow=6, col=9 -> w\nrow=6, col=10 -> w\nrow=6, col=11 -> w\nrow=6, col=12 -> w\nrow=7, col=0 -> w\nrow=7, col=1 -> .\nrow=7, col=2 -> .\nrow=7, col=3 -> .\nrow=7, col=4 -> .\nrow=7, col=5 -> .\nrow=7, col=6 -> .\nrow=7, col=7 -> .\nrow=7, col=8 -> w\nrow=7, col=9 -> .\nrow=7, col=10 -> .\nrow=7, col=11 -> .\nrow=7, col=12 -> w\nrow=8, col=0 -> w\nrow=8, col=1 -> .\nrow=8, col=2 -> .\nrow=8, col=3 -> .\nrow=8, col=4 -> $\nrow=8, col=5 -> w\nrow=8, col=6 -> .\nrow=8, col=7 -> .\nrow=8, col=8 -> .\nrow=8, col=9 -> .\nrow=8, col=10 -> w\nrow=8, col=11 -> @\nrow=8, col=12 -> w\nrow=9, col=0 -> w\nrow=9, col=1 -> w\nrow=9, col=2 -> w\nrow=9, col=3 -> w\nrow=9, col=4 -> w\nrow=9, col=5 -> w\nrow=9, col=6 -> w\nrow=9, col=7 -> w\nrow=9, col=8 -> w\nrow=9, col=9 -> w\nrow=9, col=10 -> w\nrow=9, col=11 -> w\nrow=9, col=12 -> w\nrow=11, col=0 -> =\nrow=11, col=1 -> =\nrow=11, col=2 -> =\nrow=11, col=3 ->  \nrow=11, col=4 -> R\nrow=11, col=5 -> o\nrow=11, col=6 -> t\nrow=11, col=7 -> a\nrow=11, col=8 -> t\nrow=11, col=9 -> e\nrow=11, col=10 -> d\nrow=11, col=11 ->  \nrow=11, col=12 -> S\nrow=11, col=13 -> t\nrow=11, col=14 -> a\nrow=11, col=15 -> t\nrow=11, col=16 -> e\nrow=11, col=17 ->  \nrow=11, col=18 -> (\nrow=11, col=19 -> Y\nrow=11, col=20 -> -\nrow=11, col=21 -> a\nrow=11, col=22 -> x\nrow=11, col=23 -> i\nrow=11, col=24 -> s\nrow=11, col=25 ->  \nrow=11, col=26 -> e\nrow=11, col=27 -> m\nrow=11, col=28 -> p\nrow=11, col=29 -> h\nrow=11, col=30 -> a\nrow=11, col=31 -> s\nrow=11, col=32 -> i\nrow=11, col=33 -> s\nrow=11, col=34 -> )\nrow=11, col=35 ->  \nrow=11, col=36 -> =\nrow=11, col=37 -> =\nrow=11, col=38 -> =\nrow=12, col=0 -> w\nrow=12, col=1 -> w\nrow=12, col=2 -> w\nrow=12, col=3 -> w\nrow=12, col=4 -> w\nrow=12, col=5 -> w\nrow=12, col=6 -> w\nrow=12, col=7 -> w\nrow=12, col=8 -> w\nrow=13, col=0 -> w\nrow=13, col=1 -> .\nrow=13, col=2 -> .\nrow=13, col=3 -> .\nrow=13, col=4 -> #\nrow=13, col=5 -> .\nrow=13, col=6 -> .\nrow=13, col=7 -> .\nrow=13, col=8 -> w\nrow=14, col=0 -> w\nrow=14, col=1 -> .\nrow=14, col=2 -> .\nrow=14, col=3 -> w\nrow=14, col=4 -> w\nrow=14, col=5 -> w\nrow=14, col=6 -> .\nrow=14, col=7 -> .\nrow=14, col=8 -> w\nrow=15, col=0 -> w\nrow=15, col=1 -> .\nrow=15, col=2 -> .\nrow=15, col=3 -> .\nrow=15, col=4 -> .\nrow=15, col=5 -> .\nrow=15, col=6 -> .\nrow=15, col=7 -> &\nrow=15, col=8 -> w\nrow=16, col=0 -> w\nrow=16, col=1 -> $\nrow=16, col=2 -> .\nrow=16, col=3 -> .\nrow=16, col=4 -> .\nrow=16, col=5 -> .\nrow=16, col=6 -> .\nrow=16, col=7 -> .\nrow=16, col=8 -> w\nrow=17, col=0 -> w\nrow=17, col=1 -> w\nrow=17, col=2 -> .\nrow=17, col=3 -> w\nrow=17, col=4 -> .\nrow=17, col=5 -> .\nrow=17, col=6 -> w\nrow=17, col=7 -> w\nrow=17, col=8 -> w\nrow=18, col=0 -> w\nrow=18, col=1 -> .\nrow=18, col=2 -> .\nrow=18, col=3 -> w\nrow=18, col=4 -> .\nrow=18, col=5 -> .\nrow=18, col=6 -> .\nrow=18, col=7 -> w\nrow=18, col=8 -> w\nrow=19, col=0 -> w\nrow=19, col=1 -> .\nrow=19, col=2 -> .\nrow=19, col=3 -> w\nrow=19, col=4 -> .\nrow=19, col=5 -> .\nrow=19, col=6 -> .\nrow=19, col=7 -> .\nrow=19, col=8 -> w\nrow=20, col=0 -> w\nrow=20, col=1 -> .\nrow=20, col=2 -> w\nrow=20, col=3 -> w\nrow=20, col=4 -> .\nrow=20, col=5 -> w\nrow=20, col=6 -> .\nrow=20, col=7 -> .\nrow=20, col=8 -> w\nrow=21, col=0 -> w\nrow=21, col=1 -> .\nrow=21, col=2 -> .\nrow=21, col=3 -> w\nrow=21, col=4 -> .\nrow=21, col=5 -> w\nrow=21, col=6 -> .\nrow=21, col=7 -> .\nrow=21, col=8 -> w\nrow=22, col=0 -> w\nrow=22, col=1 -> w\nrow=22, col=2 -> .\nrow=22, col=3 -> w\nrow=22, col=4 -> .\nrow=22, col=5 -> w\nrow=22, col=6 -> .\nrow=22, col=7 -> *\nrow=22, col=8 -> w\nrow=23, col=0 -> w\nrow=23, col=1 -> @\nrow=23, col=2 -> .\nrow=23, col=3 -> w\nrow=23, col=4 -> %\nrow=23, col=5 -> w\nrow=23, col=6 -> .\nrow=23, col=7 -> .\nrow=23, col=8 -> w\nrow=24, col=0 -> w\nrow=24, col=1 -> w\nrow=24, col=2 -> w\nrow=24, col=3 -> w\nrow=24, col=4 -> w\nrow=24, col=5 -> w\nrow=24, col=6 -> w\nrow=24, col=7 -> w\nrow=24, col=8 -> w\nrow=25, col=0 -> N\nrow=25, col=1 -> o\nrow=25, col=2 -> t\nrow=25, col=3 -> e\nrow=25, col=4 -> :\nrow=25, col=5 ->  \nrow=25, col=6 -> I\nrow=25, col=7 -> n\nrow=25, col=8 ->  \nrow=25, col=9 -> t\nrow=25, col=10 -> h\nrow=25, col=11 -> e\nrow=25, col=12 ->  \nrow=25, col=13 -> o\nrow=25, col=14 -> r\nrow=25, col=15 -> i\nrow=25, col=16 -> g\nrow=25, col=17 -> i\nrow=25, col=18 -> n\nrow=25, col=19 -> a\nrow=25, col=20 -> l\nrow=25, col=21 ->  \nrow=25, col=22 -> s\nrow=25, col=23 -> t\nrow=25, col=24 -> a\nrow=25, col=25 -> t\nrow=25, col=26 -> e\nrow=25, col=27 -> ,\nrow=25, col=28 ->  \nrow=25, col=29 -> e\nrow=25, col=30 -> a\nrow=25, col=31 -> c\nrow=25, col=32 -> h\nrow=25, col=33 ->  \nrow=25, col=34 -> r\nrow=25, col=35 -> o\nrow=25, col=36 -> w\nrow=25, col=37 ->  \nrow=25, col=38 -> c\nrow=25, col=39 -> o\nrow=25, col=40 -> r\nrow=25, col=41 -> r\nrow=25, col=42 -> e\nrow=25, col=43 -> s\nrow=25, col=44 -> p\nrow=25, col=45 -> o\nrow=25, col=46 -> n\nrow=25, col=47 -> d\nrow=25, col=48 -> s\nrow=25, col=49 ->  \nrow=25, col=50 -> t\nrow=25, col=51 -> o\nrow=25, col=52 ->  \nrow=25, col=53 -> h\nrow=25, col=54 -> o\nrow=25, col=55 -> r\nrow=25, col=56 -> i\nrow=25, col=57 -> z\nrow=25, col=58 -> o\nrow=25, col=59 -> n\nrow=25, col=60 -> t\nrow=25, col=61 -> a\nrow=25, col=62 -> l\nrow=25, col=63 ->  \nrow=25, col=64 -> (\nrow=25, col=65 -> l\nrow=25, col=66 -> e\nrow=25, col=67 -> f\nrow=25, col=68 -> t\nrow=25, col=69 -> -\nrow=25, col=70 -> r\nrow=25, col=71 -> i\nrow=25, col=72 -> g\nrow=25, col=73 -> h\nrow=25, col=74 -> t\nrow=25, col=75 -> )\nrow=25, col=76 ->  \nrow=25, col=77 -> l\nrow=25, col=78 -> a\nrow=25, col=79 -> y\nrow=25, col=80 -> o\nrow=25, col=81 -> u\nrow=25, col=82 -> t\nrow=25, col=83 ->  \nrow=25, col=84 -> i\nrow=25, col=85 -> n\nrow=25, col=86 ->  \nrow=25, col=87 -> t\nrow=25, col=88 -> h\nrow=25, col=89 -> e\nrow=25, col=90 ->  \nrow=25, col=91 -> g\nrow=25, col=92 -> a\nrow=25, col=93 -> m\nrow=25, col=94 -> e\nrow=25, col=95 -> .\nrow=26, col=0 -> I\nrow=26, col=1 -> n\nrow=26, col=2 ->  \nrow=26, col=3 -> t\nrow=26, col=4 -> h\nrow=26, col=5 -> e\nrow=26, col=6 ->  \nrow=26, col=7 -> r\nrow=26, col=8 -> o\nrow=26, col=9 -> t\nrow=26, col=10 -> a\nrow=26, col=11 -> t\nrow=26, col=12 -> e\nrow=26, col=13 -> d\nrow=26, col=14 ->  \nrow=26, col=15 -> v\nrow=26, col=16 -> e\nrow=26, col=17 -> r\nrow=26, col=18 -> s\nrow=26, col=19 -> i\nrow=26, col=20 -> o\nrow=26, col=21 -> n\nrow=26, col=22 -> ,\nrow=26, col=23 ->  \nrow=26, col=24 -> e\nrow=26, col=25 -> a\nrow=26, col=26 -> c\nrow=26, col=27 -> h\nrow=26, col=28 ->  \nrow=26, col=29 -> r\nrow=26, col=30 -> o\nrow=26, col=31 -> w\nrow=26, col=32 ->  \nrow=26, col=33 -> c\nrow=26, col=34 -> o\nrow=26, col=35 -> r\nrow=26, col=36 -> r\nrow=26, col=37 -> e\nrow=26, col=38 -> s\nrow=26, col=39 -> p\nrow=26, col=40 -> o\nrow=26, col=41 -> n\nrow=26, col=42 -> d\nrow=26, col=43 -> s\nrow=26, col=44 ->  \nrow=26, col=45 -> t\nrow=26, col=46 -> o\nrow=26, col=47 ->  \nrow=26, col=48 -> v\nrow=26, col=49 -> e\nrow=26, col=50 -> r\nrow=26, col=51 -> t\nrow=26, col=52 -> i\nrow=26, col=53 -> c\nrow=26, col=54 -> a\nrow=26, col=55 -> l\nrow=26, col=56 ->  \nrow=26, col=57 -> (\nrow=26, col=58 -> u\nrow=26, col=59 -> p\nrow=26, col=60 -> -\nrow=26, col=61 -> d\nrow=26, col=62 -> o\nrow=26, col=63 -> w\nrow=26, col=64 -> n\nrow=26, col=65 -> )\nrow=26, col=66 ->  \nrow=26, col=67 -> l\nrow=26, col=68 -> a\nrow=26, col=69 -> y\nrow=26, col=70 -> o\nrow=26, col=71 -> u\nrow=26, col=72 -> t\nrow=26, col=73 -> .",
    "model": "portkey"
  }
]