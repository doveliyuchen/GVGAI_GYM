[
  {
    "role": "user",
    "content": "=== Game Rules ===\nGame rules in natural language:\nBased on the provided description, this game appears to belong to the genre of **arcade-style action/platformer** with elements of **resource management** and **strategic positioning**.\n\n### Game Mechanics\n1. **Sprites**: The game features various sprites that represent different entities, including the player avatar (yellow helicopter), enemies (satellite and tanks), projectiles (bombs, missiles), and environmental items (clouds and walls).\n  \n2. **Movement and Interaction**:\n   - The player (avatar) can shoot (bullets) and interact with different sprites. \n   - Sprites appear to have specific interactions; for example, 'sam' causes significant harm to the avatar, while the avatar can collect resources from supply sprites.\n   - Walls (EOS) act as barriers that affect sprite movement and can cause reversals or repulsion.\n\n3. **Win/Loss Conditions**:\n   - The game ends unfavorably when your avatar or all satellites are eliminated.\n   - You win when you eliminate all tanks associated with the portal base.\n\n### Objectives\n- The primary goal is to protect your avatar while eliminating enemy tanks and managing resources (bullets).\n- Successful navigation through levels and destruction of the tank sprites will allow for victory.\n\n### Win/Loss Conditions\n- **Loss**: The game is lost when the avatar or all satellites are defeated.\n- **Win**: Successfully eliminate all tanks and/or achieve resource objectives related to the portal bases.\n\n### Overall Strategy\n1. **Resource Management**: Throughout the game, ensure you collect supply sprites to maintain a healthy amount of bullets, as they are limited (max 20 bullets).\n  \n2. **Avoiding Enemies**: Presence of multiple damaging enemies (satellites and sam) means defensive play is crucial. Avoid intersections with these sprites whenever possible. Use walls to create barriers and prevent enemy access.\n\n3. **Targeting Tanks**: Focus on creating strategies to attack the tanks that spawn at portal bases. Prioritize knocking out tanks with carefully timed bomb drops, ensuring you're out of their range after an attack.\n\n4. **Positioning and Movement**: Always consider your positioning relative to walls to minimize harm from enemy sprites. Backing away into walls can give you a moment to rethink your next move.\n\n5. **Use of Obstacles**: Make good use of the game map layout to outmaneuver faster enemies, utilizing the pathways and walls for cover against projectiles.\n\n6. **Plan for Crossfire**: With players and bombers needing to dodge each other, keeping your movements erratic but calculated will avoid taking hits while positioning yourself for a counterattack.\n\nBy focusing on information gathering (collecting supply drops), carefully planning movements to avoid damage, and strategically targeting enemy tanks, players can enhance their chances of winning and successfully navigating the various levels of this arcade-style game.\n\nYou are an intelligent player playing a video game, and you have a friend provide you strategy. Interpret the state, rule, strategy and act accordingly. Notice that your avatar position is one of the most important information, if the position doesn't change from the last state, you need to analyze the state and make a different action from the last time.\n\n=== Available Actions ===\n0: ACTION_NIL\n1: ACTION_USE\n2: ACTION_LEFT\n3: ACTION_RIGHT\n4: ACTION_DOWN\n5: ACTION_UP\n\n=== Important Mechanics Notice ===\n In some games, directional actions (LEFT, RIGHT, UP, DOWN) may first cause the avatar to rotate toward the intended direction without immediately moving. If the avatar's position does not change after a directional action, it may indicate a rotation has occurred. To proceed, you must apply the directional action again after rotation. Always verify whether the avatar actually moved after each action. Please understand the rule and the interaction set first, then locate the item, finally choose a meaningful action towards the win and respond in the format: ``` Action:<action number> ```. Include one sentence of feedback on the action and your expectation to see if it aligns with the strategy. Notice, Action 0 will not reasult in any change in this game environment, and you may need to understand the level layout first to play the game. \n\n=== Sprite Mapping ===\navatar -> 'a'\nsatellite thermosphere -> 'c'\nportalBase troposphere -> 'b'\nthermosphere -> 't'\nstratosphere -> 's'\ntroposphere -> 'p'\nleftCloud stratosphere -> 'l'\nfastLeftCloud stratosphere -> 'd'\nrightCloud stratosphere -> 'r'\nfastRightCloud stratosphere -> 'e'\nfastLeftCloud -> '@'\nfastLeftCloud fastRightCloud -> '#'\nfastRightCloud -> '$'\nportalAmmo supply -> '%'\nportalBase tank -> '&'\nrightCloud -> '*'\nsatellite -> 'f'\nsupply -> 'g'\ntank -> 'h'\nfastRightCloud rightCloud -> 'i'\nportalAmmo -> 'j'\nfastRightCloud supply -> 'k'\nportalBase -> 'm'\nsam tank -> 'n'\nfastRightCloud portalAmmo -> 'o'\nsam -> 'q'\nfastRightCloud portalAmmo supply -> 'u'\nfastLeftCloud rightCloud -> 'v'\n\n=== Current State ===\n=== Map in Natural language ===\nEach line shows entity at (row, col).\nIn rotated version, row emphasizes vertical (up-down).\nrow=0, col=0 -> .\nrow=0, col=1 -> .\nrow=0, col=2 -> .\nrow=0, col=3 -> .\nrow=0, col=4 -> .\nrow=0, col=5 -> .\nrow=0, col=6 -> .\nrow=0, col=7 -> .\nrow=0, col=8 -> .\nrow=0, col=9 -> .\nrow=0, col=10 -> .\nrow=0, col=11 -> .\nrow=0, col=12 -> .\nrow=0, col=13 -> f\nrow=0, col=14 -> .\nrow=0, col=15 -> .\nrow=0, col=16 -> .\nrow=0, col=17 -> f\nrow=0, col=18 -> .\nrow=0, col=19 -> .\nrow=0, col=20 -> .\nrow=0, col=21 -> .\nrow=0, col=22 -> f\nrow=0, col=23 -> .\nrow=0, col=24 -> .\nrow=0, col=25 -> .\nrow=0, col=26 -> .\nrow=0, col=27 -> .\nrow=0, col=28 -> .\nrow=0, col=29 -> .\nrow=0, col=30 -> .\nrow=1, col=0 -> .\nrow=1, col=1 -> .\nrow=1, col=2 -> .\nrow=1, col=3 -> .\nrow=1, col=4 -> .\nrow=1, col=5 -> .\nrow=1, col=6 -> .\nrow=1, col=7 -> .\nrow=1, col=8 -> .\nrow=1, col=9 -> .\nrow=1, col=10 -> .\nrow=1, col=11 -> .\nrow=1, col=12 -> .\nrow=1, col=13 -> .\nrow=1, col=14 -> .\nrow=1, col=15 -> .\nrow=1, col=16 -> .\nrow=1, col=17 -> .\nrow=1, col=18 -> .\nrow=1, col=19 -> .\nrow=1, col=20 -> .\nrow=1, col=21 -> f\nrow=1, col=22 -> .\nrow=1, col=23 -> .\nrow=1, col=24 -> .\nrow=1, col=25 -> .\nrow=1, col=26 -> .\nrow=1, col=27 -> .\nrow=1, col=28 -> .\nrow=1, col=29 -> .\nrow=1, col=30 -> f\nrow=2, col=0 -> f\nrow=2, col=1 -> .\nrow=2, col=2 -> f\nrow=2, col=3 -> .\nrow=2, col=4 -> .\nrow=2, col=5 -> .\nrow=2, col=6 -> .\nrow=2, col=7 -> .\nrow=2, col=8 -> .\nrow=2, col=9 -> .\nrow=2, col=10 -> .\nrow=2, col=11 -> f\nrow=2, col=12 -> .\nrow=2, col=13 -> .\nrow=2, col=14 -> .\nrow=2, col=15 -> .\nrow=2, col=16 -> .\nrow=2, col=17 -> .\nrow=2, col=18 -> .\nrow=2, col=19 -> .\nrow=2, col=20 -> .\nrow=2, col=21 -> .\nrow=2, col=22 -> .\nrow=2, col=23 -> .\nrow=2, col=24 -> .\nrow=2, col=25 -> .\nrow=2, col=26 -> .\nrow=2, col=27 -> .\nrow=2, col=28 -> .\nrow=2, col=29 -> .\nrow=2, col=30 -> .\nrow=3, col=0 -> f\nrow=3, col=1 -> .\nrow=3, col=2 -> .\nrow=3, col=3 -> .\nrow=3, col=4 -> .\nrow=3, col=5 -> .\nrow=3, col=6 -> .\nrow=3, col=7 -> f\nrow=3, col=8 -> .\nrow=3, col=9 -> f\nrow=3, col=10 -> f\nrow=3, col=11 -> f\nrow=3, col=12 -> f\nrow=3, col=13 -> .\nrow=3, col=14 -> .\nrow=3, col=15 -> .\nrow=3, col=16 -> .\nrow=3, col=17 -> .\nrow=3, col=18 -> .\nrow=3, col=19 -> .\nrow=3, col=20 -> .\nrow=3, col=21 -> .\nrow=3, col=22 -> .\nrow=3, col=23 -> f\nrow=3, col=24 -> .\nrow=3, col=25 -> .\nrow=3, col=26 -> f\nrow=3, col=27 -> .\nrow=3, col=28 -> .\nrow=3, col=29 -> .\nrow=3, col=30 -> f\nrow=4, col=0 -> $\nrow=4, col=1 -> $\nrow=4, col=2 -> $\nrow=4, col=3 -> @\nrow=4, col=4 -> @\nrow=4, col=5 -> @\nrow=4, col=6 -> @\nrow=4, col=7 -> @\nrow=4, col=8 -> @\nrow=4, col=9 -> .\nrow=4, col=10 -> .\nrow=4, col=11 -> #\nrow=4, col=12 -> #\nrow=4, col=13 -> #\nrow=4, col=14 -> $\nrow=4, col=15 -> .\nrow=4, col=16 -> @\nrow=4, col=17 -> @\nrow=4, col=18 -> @\nrow=4, col=19 -> .\nrow=4, col=20 -> .\nrow=4, col=21 -> .\nrow=4, col=22 -> .\nrow=4, col=23 -> .\nrow=4, col=24 -> .\nrow=4, col=25 -> .\nrow=4, col=26 -> .\nrow=4, col=27 -> .\nrow=4, col=28 -> v\nrow=4, col=29 -> @\nrow=4, col=30 -> @\nrow=5, col=0 -> .\nrow=5, col=1 -> @\nrow=5, col=2 -> @\nrow=5, col=3 -> @\nrow=5, col=4 -> @\nrow=5, col=5 -> @\nrow=5, col=6 -> @\nrow=5, col=7 -> @\nrow=5, col=8 -> .\nrow=5, col=9 -> .\nrow=5, col=10 -> .\nrow=5, col=11 -> @\nrow=5, col=12 -> @\nrow=5, col=13 -> @\nrow=5, col=14 -> @\nrow=5, col=15 -> @\nrow=5, col=16 -> .\nrow=5, col=17 -> .\nrow=5, col=18 -> .\nrow=5, col=19 -> @\nrow=5, col=20 -> @\nrow=5, col=21 -> @\nrow=5, col=22 -> @\nrow=5, col=23 -> .\nrow=5, col=24 -> .\nrow=5, col=25 -> .\nrow=5, col=26 -> @\nrow=5, col=27 -> @\nrow=5, col=28 -> @\nrow=5, col=29 -> .\nrow=5, col=30 -> .\nrow=6, col=0 -> $\nrow=6, col=1 -> $\nrow=6, col=2 -> $\nrow=6, col=3 -> .\nrow=6, col=4 -> .\nrow=6, col=5 -> .\nrow=6, col=6 -> .\nrow=6, col=7 -> .\nrow=6, col=8 -> .\nrow=6, col=9 -> .\nrow=6, col=10 -> .\nrow=6, col=11 -> .\nrow=6, col=12 -> .\nrow=6, col=13 -> .\nrow=6, col=14 -> .\nrow=6, col=15 -> .\nrow=6, col=16 -> .\nrow=6, col=17 -> $\nrow=6, col=18 -> $\nrow=6, col=19 -> $\nrow=6, col=20 -> $\nrow=6, col=21 -> .\nrow=6, col=22 -> .\nrow=6, col=23 -> .\nrow=6, col=24 -> g\nrow=6, col=25 -> g\nrow=6, col=26 -> .\nrow=6, col=27 -> .\nrow=6, col=28 -> g\nrow=6, col=29 -> g\nrow=6, col=30 -> j\nrow=7, col=0 -> $\nrow=7, col=1 -> $\nrow=7, col=2 -> a\nrow=7, col=3 -> .\nrow=7, col=4 -> .\nrow=7, col=5 -> .\nrow=7, col=6 -> .\nrow=7, col=7 -> .\nrow=7, col=8 -> .\nrow=7, col=9 -> .\nrow=7, col=10 -> .\nrow=7, col=11 -> .\nrow=7, col=12 -> $\nrow=7, col=13 -> $\nrow=7, col=14 -> $\nrow=7, col=15 -> .\nrow=7, col=16 -> .\nrow=7, col=17 -> .\nrow=7, col=18 -> .\nrow=7, col=19 -> .\nrow=7, col=20 -> $\nrow=7, col=21 -> $\nrow=7, col=22 -> $\nrow=7, col=23 -> $\nrow=7, col=24 -> $\nrow=7, col=25 -> .\nrow=7, col=26 -> .\nrow=7, col=27 -> $\nrow=7, col=28 -> $\nrow=7, col=29 -> $\nrow=7, col=30 -> $\nrow=8, col=0 -> .\nrow=8, col=1 -> q\nrow=8, col=2 -> q\nrow=8, col=3 -> .\nrow=8, col=4 -> .\nrow=8, col=5 -> .\nrow=8, col=6 -> .\nrow=8, col=7 -> .\nrow=8, col=8 -> .\nrow=8, col=9 -> .\nrow=8, col=10 -> .\nrow=8, col=11 -> .\nrow=8, col=12 -> .\nrow=8, col=13 -> .\nrow=8, col=14 -> .\nrow=8, col=15 -> .\nrow=8, col=16 -> .\nrow=8, col=17 -> .\nrow=8, col=18 -> .\nrow=8, col=19 -> .\nrow=8, col=20 -> .\nrow=8, col=21 -> .\nrow=8, col=22 -> .\nrow=8, col=23 -> .\nrow=8, col=24 -> .\nrow=8, col=25 -> .\nrow=8, col=26 -> .\nrow=8, col=27 -> .\nrow=8, col=28 -> .\nrow=8, col=29 -> .\nrow=8, col=30 -> .\nrow=9, col=0 -> .\nrow=9, col=1 -> q\nrow=9, col=2 -> q\nrow=9, col=3 -> .\nrow=9, col=4 -> .\nrow=9, col=5 -> .\nrow=9, col=6 -> .\nrow=9, col=7 -> .\nrow=9, col=8 -> .\nrow=9, col=9 -> .\nrow=9, col=10 -> .\nrow=9, col=11 -> .\nrow=9, col=12 -> .\nrow=9, col=13 -> .\nrow=9, col=14 -> .\nrow=9, col=15 -> .\nrow=9, col=16 -> .\nrow=9, col=17 -> .\nrow=9, col=18 -> .\nrow=9, col=19 -> .\nrow=9, col=20 -> .\nrow=9, col=21 -> .\nrow=9, col=22 -> .\nrow=9, col=23 -> .\nrow=9, col=24 -> .\nrow=9, col=25 -> .\nrow=9, col=26 -> .\nrow=9, col=27 -> .\nrow=9, col=28 -> .\nrow=9, col=29 -> .\nrow=9, col=30 -> .\nrow=10, col=0 -> .\nrow=10, col=1 -> .\nrow=10, col=2 -> .\nrow=10, col=3 -> .\nrow=10, col=4 -> .\nrow=10, col=5 -> .\nrow=10, col=6 -> .\nrow=10, col=7 -> .\nrow=10, col=8 -> .\nrow=10, col=9 -> .\nrow=10, col=10 -> .\nrow=10, col=11 -> .\nrow=10, col=12 -> .\nrow=10, col=13 -> .\nrow=10, col=14 -> .\nrow=10, col=15 -> .\nrow=10, col=16 -> .\nrow=10, col=17 -> .\nrow=10, col=18 -> .\nrow=10, col=19 -> .\nrow=10, col=20 -> .\nrow=10, col=21 -> .\nrow=10, col=22 -> .\nrow=10, col=23 -> .\nrow=10, col=24 -> .\nrow=10, col=25 -> .\nrow=10, col=26 -> .\nrow=10, col=27 -> .\nrow=10, col=28 -> .\nrow=10, col=29 -> .\nrow=10, col=30 -> .\nrow=11, col=0 -> m\nrow=11, col=1 -> .\nrow=11, col=2 -> .\nrow=11, col=3 -> h\nrow=11, col=4 -> h\nrow=11, col=5 -> .\nrow=11, col=6 -> .\nrow=11, col=7 -> .\nrow=11, col=8 -> .\nrow=11, col=9 -> .\nrow=11, col=10 -> .\nrow=11, col=11 -> .\nrow=11, col=12 -> .\nrow=11, col=13 -> .\nrow=11, col=14 -> .\nrow=11, col=15 -> .\nrow=11, col=16 -> .\nrow=11, col=17 -> .\nrow=11, col=18 -> .\nrow=11, col=19 -> .\nrow=11, col=20 -> .\nrow=11, col=21 -> .\nrow=11, col=22 -> .\nrow=11, col=23 -> .\nrow=11, col=24 -> .\nrow=11, col=25 -> .\nrow=11, col=26 -> .\nrow=11, col=27 -> .\nrow=11, col=28 -> .\nrow=11, col=29 -> .\nrow=11, col=30 -> .",
    "model": "portkey"
  },
  {
    "role": "assistant",
    "content": "Given the current state of the game and the layout described, the yellow helicopter (player avatar) is positioned at (7, 2). The main objective is to either eliminate the tanks or manage resources while avoiding enemy sprites (satellites 'f' and 'sam' 'q') that pose a threat.\n\n**Key Observations:**\n- Tanks ('h') are at (11, 3) and (11, 4), which are directly below the player.\n- There are several enemy satellites and 'sam's around, making navigation important.\n- Supply resources are available (like 'g') but the player is currently in range of immediate threats (the enemies).\n\nGiven that the avatar has not moved from the previous state, I must make a movement that both avoids threats and positions for a better offensive action, focusing on avoiding the satellites and 'sam'.\n\n**Action Decision:**\nTo create distance from the nearest enemy satellite and look for an opportunity to attack the tanks below, I will move **down** to (8, 2).\n\n``` Action:4 ```\nThis action will reposition the avatar while maintaining a strategy to avoid incoming threats and plan my next moves toward the tanks.",
    "model": "portkey"
  }
]